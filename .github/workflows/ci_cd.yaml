name: CI/CD with MySQL and FastAPI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify Docker installation
        run: docker version

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build MySQL container
        run: |
          docker build -t mysql_container -f db/Dockerfile db/
          docker run -d --name company-database \
            -e MYSQL_ROOT_PASSWORD=123456 \
            -e MYSQL_DATABASE=Company \
            -e MYSQL_USER=my_user \
            -e MYSQL_PASSWORD=my_password \
            mysql_container
      - name: check-container-fully-started
        run: docker inspect company-database

      - name: Build FastAPI image
        run: |
          docker build -t my-fastapi-image .
      - name: Run API functional test
        run: |
          docker run -d --name fastapi_container -p 80:80 -e DATABASE_URL=mysql://my_user:my_password@172.17.0.2:3306/my_database my-fastapi-image
          docker inspect fastapi_container
          sleep 5
          curl http://localhost:80/healthcheck  # Adjust API endpoint
          docker stop fastapi_container

      - name: Stop MySQL container
        run: docker stop company-database


      - name: Upload Docker image
        run: |
          docker tag my-fastapi-image ${{ secrets.DOCKERHUB_USERNAME }}/my-fastapi-image
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-fastapi-image

     # Kubernetes Image Build
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f app-deployment.yaml
          kubectl apply -f service.yaml

      - name: Get pods status
        run: |
          kubectl get pods -n fastapi-app